local mod = dmhub.GetModLoading()

CharacterModifier.RegisterType('aura', "Aura")

CharacterModifier.TypeInfo.aura = {
	init = function(modifier)
		modifier.aura = Aura.Create{}
		modifier.radius = "20"
		modifier.seq = dmhub.GenerateGuid()
	end,

	generateAura = function(modifier, creature, auras)
		local token = dmhub.LookupToken(creature)
		local auraInstance = AuraInstance.new{
			guid = modifier:try_get("seq", "--"),
			casterid = token.id,
			name = modifier.name,
			tokenAttached = true, --tell DMHub this is attached to its caster token.
			symbols = {
				caster = GenerateSymbols(creature),
			},

			aura = modifier.aura,

			area = dmhub.CalculateShape{
				shape = 'radiusfromcreature',
				token = token,
				--let it calculate this from the token.
				--targetPoint = core.Vector3(token.loc.x, token.loc.y, 0),
				range = 100,
				radius = dmhub.EvalGoblinScriptDeterministic(modifier.radius, GenerateSymbols(creature, modifier:try_get("_tmp_symbols")), 0, "Aura radius"),
			},
		}

		auras[#auras+1] = auraInstance
	end,

	createEditor = function(modifier, element)
		local Refresh
		Refresh = function()

			local children = {}

			children[#children+1] = gui.Panel{
				classes = {'formPanel'},
				children = {
					gui.Label{
						classes = {'formLabel'},
						text = 'Radius:',
					},
					gui.GoblinScriptInput{
						value = modifier.radius or "20",
						change = function(element, text)
							modifier.radius = text
							modifier.seq = dmhub.GenerateGuid()
							Refresh()
						end,

						documentation = {
							domains = modifier:Domains(),
							help = string.format("This GoblinScript is used to calculate the radius of the aura generated by this modifier."),
							output = "number",
							examples = {
								{
									script = "10",
									text = "The aura will have a radius of 10 feet",
								},
								{
									script = "5 when level < 11 else 30",
									text = "The aura will have a radius of 5 feet if the creature generating it is lower than level 11. Otherwise it will have a radius of 30 feet.",
								},
							},
							subject = creature.helpSymbols,
							subjectDescription = "The creature that generated this aura",
							symbols = modifier:HelpAdditionalSymbols(),
						},

					},
				}
			}

			children[#children+1] = gui.PrettyButton{
				width = 200,
				height = 50,
				text = "Edit Aura",
				click = function(element)
					element.root:AddChild(modifier.aura:ShowEditDialog{ norelocate = true })
				end,
			}

			element.children = children
		end

		Refresh()
	end,
}
